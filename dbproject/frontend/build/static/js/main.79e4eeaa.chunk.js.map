{"version":3,"sources":["components/TaskList.js","components/TaskForm.js","App.js","reportWebVitals.js","index.js"],"names":["TaskList","tasks","setTasks","useState","useEffect","fetch","then","res","json","data","React","createElement","map","task","key","id","title","description","onClick","async","method","filter","deleteTask","TaskForm","setTitle","setDescription","onSubmit","e","preventDefault","headers","body","JSON","stringify","type","placeholder","value","onChange","target","required","App","message","setMessage","response","text","style","textAlign","marginTop","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"2KA+BeA,MA7BEA,KACf,MAAOC,EAAOC,GAAYC,mBAAS,IAEnCC,oBAAU,KACRC,MAAM,mCACHC,KAAKC,GAAOA,EAAIC,QAChBF,KAAKG,GAAQP,EAASO,KACxB,IAOH,OACEC,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,aACJD,IAAAC,cAAA,UACGV,EAAMW,IAAIC,GACTH,IAAAC,cAAA,MAAIG,IAAKD,EAAKE,IACXF,EAAKG,MAAM,MAAIH,EAAKI,YACrBP,IAAAC,cAAA,UAAQO,QAASA,IAZRC,iBACXd,MAAM,mCAAmCU,EAAM,CAAEK,OAAQ,WAC/DlB,EAASD,EAAMoB,OAAOR,GAAQA,EAAKE,KAAOA,KAUXO,CAAWT,EAAKE,KAAK,eCIzCQ,MAzBEA,KACf,MAAOP,EAAOQ,GAAYrB,mBAAS,KAC5Bc,EAAaQ,GAAkBtB,mBAAS,IAc/C,OACEO,IAAAC,cAAA,QAAMe,SAbaP,UACnBQ,EAAEC,uBACIvB,MAAM,kCAAmC,CAC7Ce,OAAQ,OACRS,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEhB,QAAOC,kBAGhCO,EAAS,IACTC,EAAe,MAKbf,IAAAC,cAAA,SAAOsB,KAAK,OAAOC,YAAY,QAAQC,MAAOnB,EAAOoB,SAAWT,GAAMH,EAASG,EAAEU,OAAOF,OAAQG,UAAQ,IACxG5B,IAAAC,cAAA,SAAOsB,KAAK,OAAOC,YAAY,cAAcC,MAAOlB,EAAamB,SAAWT,GAAMF,EAAeE,EAAEU,OAAOF,OAAQG,UAAQ,IAC1H5B,IAAAC,cAAA,UAAQsB,KAAK,UAAS,cCGbM,MArBf,WAEE,MAAMC,EAASC,GAAYtC,mBAAS,IAQpC,OANAC,oBAAU,KACRC,MAAM,yBACLC,KAAMoC,GAAWA,EAASC,QAC1BrC,KAAMG,GAAOgC,EAAWhC,KACzB,IAGAC,IAAAC,cAAA,OAAKiC,MAAO,CAACC,UAAW,SAASC,UAAW,SAC1CpC,IAAAC,cAAA,UAAI,kBACJD,IAAAC,cAAA,SAAI6B,GACJ9B,IAAAC,cAAA,UAAI,mBACJD,IAAAC,cAACY,EAAQ,MACTb,IAAAC,cAACX,EAAQ,QCRA+C,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3C,KAAK4C,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,MCDDQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHlD,IAAAC,cAACD,IAAMmD,WAAU,KACfnD,IAAAC,cAAC4B,EAAG,QAORQ,K","file":"static/js/main.79e4eeaa.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst TaskList = () => {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:5000/api/tasks')\n      .then(res => res.json())\n      .then(data => setTasks(data));\n  }, []);\n\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/api/tasks/${id}`, { method: 'DELETE' });\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  return (\n    <div>\n      <h2>Task List</h2>\n      <ul>\n        {tasks.map(task => (\n          <li key={task.id}>\n            {task.title} - {task.description}\n            <button onClick={() => deleteTask(task.id)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TaskList;\n","import React, { useState } from 'react';\n\nconst TaskForm = () => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    await fetch('http://localhost:5000/api/tasks', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ title, description })\n    });\n\n    setTitle('');\n    setDescription('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" placeholder=\"Title\" value={title} onChange={(e) => setTitle(e.target.value)} required />\n      <input type=\"text\" placeholder=\"Description\" value={description} onChange={(e) => setDescription(e.target.value)} required />\n      <button type=\"submit\">Add Task</button>\n    </form>\n  );\n};\n\nexport default TaskForm;\n","import React, {useState, useEffect} from 'react';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\n\nfunction App(){\n\n  const[message, setMessage]=useState('');\n\n  useEffect(()=>{\n    fetch('http://localhost:5000')\n    .then((response)=>response.text())\n    .then((data)=>setMessage(data));\n  },[]);\n\n  return(\n    <div style={{textAlign: 'center',marginTop: '50px'}}>\n      <h1>React Frontend</h1>\n      <p>{message}</p>\n      <h1>Task Management</h1>\n      <TaskForm />\n      <TaskList />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}